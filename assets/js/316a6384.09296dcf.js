"use strict";(self.webpackChunkmobilecourse=self.webpackChunkmobilecourse||[]).push([[9753],{4965:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var i=t(4848),a=t(8453);const o={title:"React Native Maps",sidebar_position:1},s=void 0,r={id:"Maps/maps",title:"React Native Maps",description:"MapView is the component that shows Google Map on Android or Apple Map on iOS (https://github.com/react-native-maps/react-native-maps).",source:"@site/docs/Maps/maps.md",sourceDirName:"Maps",slug:"/Maps/",permalink:"/mobilecourse/docs/Maps/",draft:!1,unlisted:!1,editUrl:"https://github.com/haagahelia/mobileprogramming.git/docs/Maps/maps.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"React Native Maps",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Maps & Location",permalink:"/mobilecourse/docs/category/maps--location"},next:{title:"Location",permalink:"/mobilecourse/docs/Maps/location"}},c={},d=[];function p(e){const n={a:"a",admonition:"admonition",code:"code",img:"img",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"MapView"})," is the component that shows Google Map on Android or Apple Map on iOS (",(0,i.jsx)(n.a,{href:"https://github.com/react-native-maps/react-native-maps",children:"https://github.com/react-native-maps/react-native-maps"}),")."]}),"\n",(0,i.jsxs)(n.p,{children:["In the next example, we use ",(0,i.jsx)(n.code,{children:"MapView"})," component to show Haaga-Helia Pasila campus in the map."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:t(2501).A+"",width:"278",height:"493"})}),"\n",(0,i.jsxs)(n.p,{children:["First, we install ",(0,i.jsx)(n.code,{children:"react-native-maps"})," components:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npx expo install react-native-maps \n"})}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["When you run ",(0,i.jsx)(n.code,{children:"npx expo install"})," command, it ensures that the installed dependencies are compatible with the current version of Expo that you are using for your project. It is used when you install specific Expo-related dependencies and packages required for your Expo project."]})}),"\n",(0,i.jsxs)(n.p,{children:["We import ",(0,i.jsx)(n.code,{children:"MapView"})," and ",(0,i.jsx)(n.code,{children:"Marker"})," from the ",(0,i.jsx)(n.code,{children:"react-native-maps"})," to the App component."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"import MapView, { Marker } from 'react-native-maps';\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Finally, we render the ",(0,i.jsx)(n.code,{children:"MapView"})," component in the ",(0,i.jsx)(n.code,{children:"return"})," statement."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"<MapView\n  style={{ width: '100%', height: '100%' }} \n  initialRegion={{\n    latitude: 60.200692,\n    longitude: 24.934302,\n    latitudeDelta: 0.0322,\n    longitudeDelta: 0.0221,\n  }} \n/>\n"})}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsxs)(n.p,{children:["Use ",(0,i.jsx)(n.code,{children:"region"})," prop instead of ",(0,i.jsx)(n.code,{children:"initialRegion"})," when having region in state (dynamic map). Changing the ",(0,i.jsx)(n.code,{children:"initialRegion"})," prop after the component has mounted will not result in a region change."]}),(0,i.jsx)(n.p,{children:"For example,"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"// Create a state for region\nconst [region, setRegion] = useState({\n  latitude: 60.200692,\n  longitude: 24.934302,\n  latitudeDelta: 0.0322,\n  longitudeDelta: 0.0221,\n})\n\n// Use region prop in the MapView and the value comes from region state\n<MapView\n  style={{ width: '100%', height: '100%' }} \n  region={region} \n/>\n"})})]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"Marker"})," component is used to display a marker on a map. To display a marker, we add the ",(0,i.jsx)(n.code,{children:"Marker"})," component inside the ",(0,i.jsx)(n.code,{children:"MapView"})," component. Marker's ",(0,i.jsx)(n.code,{children:"coordinate"})," prop specifies the position of the marker on the map. It takes an object with latitude and longitude properties. Marker's ",(0,i.jsx)(n.code,{children:"title"})," prop allows you to specify a title for the marker. This title is displayed when the marker is tapped by the user on the map."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"<MapView\n  style={{ width: '100%', height: '100%' }} \n  initialRegion={{\n    latitude: 60.200692,\n    longitude: 24.934302,\n    latitudeDelta: 0.0322,\n    longitudeDelta: 0.0221,\n  }}>\n  <Marker\n    coordinate={{\n      latitude: 60.201373, \n      longitude: 24.934041}}\n      title='Haaga-Helia' \n    />\n</MapView>\n"})}),"\n",(0,i.jsx)(n.p,{children:"Next, we learn how to get current location of your device."})]})}function l(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},2501:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/map1-c1b3767292deec0073895af141afc9f0.png"},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>r});var i=t(6540);const a={},o=i.createContext(a);function s(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);
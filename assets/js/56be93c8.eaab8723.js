"use strict";(self.webpackChunkmobilecourse=self.webpackChunkmobilecourse||[]).push([[120],{1927:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>n,metadata:()=>s,toc:()=>u});var i=o(4848),r=o(8453);const n={title:"Expo Router",sidebar_position:2},a=void 0,s={id:"Navigation/exporouter",title:"Expo Router",description:"Expo provides Expo Router that is routing library for React Native applications. It is file-based router and when a file is added to the app directory, the file automatically becomes a route in your navigation.",source:"@site/docs/Navigation/exporouter.md",sourceDirName:"Navigation",slug:"/Navigation/exporouter",permalink:"/mobilecourse/docs/Navigation/exporouter",draft:!1,unlisted:!1,editUrl:"https://github.com/haagahelia/mobileprogramming.git/docs/Navigation/exporouter.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Expo Router",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"React Navigation",permalink:"/mobilecourse/docs/Navigation/reactnavigation"},next:{title:"Networking",permalink:"/mobilecourse/docs/category/networking"}},c={},u=[];function p(e){const t={a:"a",p:"p",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"Expo provides Expo Router that is routing library for React Native applications. It is file-based router and when a file is added to the app directory, the file automatically becomes a route in your navigation."}),"\n",(0,i.jsxs)(t.p,{children:["Read more in ",(0,i.jsx)(t.a,{href:"https://docs.expo.dev/router/introduction/",children:"https://docs.expo.dev/router/introduction/"})]}),"\n",(0,i.jsx)(t.p,{children:"You can easily test expo router by creating expo app without template. It includes expo router and creates one route for you."})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>a,x:()=>s});var i=o(6540);const r={},n=i.createContext(r);function a(e){const t=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(n.Provider,{value:t},e.children)}}}]);
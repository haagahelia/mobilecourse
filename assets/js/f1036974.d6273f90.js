"use strict";(self.webpackChunkmobilecourse=self.webpackChunkmobilecourse||[]).push([[338],{5121:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var i=n(5893),o=n(1151);const a={title:"React Native API",sidebar_position:6},r=void 0,s={id:"React Native/nativeapi",title:"React Native API",description:"React Native provides some useful APIs that you can use in your apps, for example:",source:"@site/docs/React Native/nativeapi.md",sourceDirName:"React Native",slug:"/React Native/nativeapi",permalink:"/mobilecourse/docs/React Native/nativeapi",draft:!1,unlisted:!1,editUrl:"https://github.com/haagahelia/mobileprogramming.git/docs/React Native/nativeapi.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{title:"React Native API",sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Styling",permalink:"/mobilecourse/docs/React Native/styling"},next:{title:"Debugging",permalink:"/mobilecourse/docs/React Native/debugging"}},c={},d=[{value:"Platform",id:"platform",level:3},{value:"Dimensions",id:"dimensions",level:3},{value:"Keyboard",id:"keyboard",level:3}];function l(e){const t={a:"a",admonition:"admonition",code:"code",h3:"h3",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"React Native provides some useful APIs that you can use in your apps, for example:"}),"\n",(0,i.jsx)(t.h3,{id:"platform",children:"Platform"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"Platform"})," API can be used to get information about current platform"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-jsx",children:'import React from "react";\r\nimport { Platform, Text, View } from "react-native";\r\n\r\nfunction App() {\r\n  return (\r\n    <View>\r\n      <Text>OS</Text>\r\n      <Text>{Platform.OS}</Text>\r\n      <Text>OS Version</Text>\r\n      <Text>{Platform.Version}</Text>\r\n    </View>\r\n  );\r\n}\n'})}),"\n",(0,i.jsx)(t.h3,{id:"dimensions",children:"Dimensions"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"Dimensions"})," API can be used to get app window dimensions."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:'import React from "react";\r\nimport { Dimensions } from "react-native";\r\n\r\nfunction App() {\r\n  const windowWidth = Dimensions.get("window").width;\r\n  const windowHeight = Dimensions.get("window").height;\r\n\r\n  // continues...\r\n}\n'})}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsxs)(t.p,{children:["Dimensions can change for example, due to rotation. There is also ",(0,i.jsx)(t.code,{children:"useWindowDimensions"})," hook that automatically updates width and height."]})}),"\n",(0,i.jsx)(t.h3,{id:"keyboard",children:"Keyboard"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"Keyboard"})," API can be used to listen events and make changes to the keyboard. You can for example dismiss the keyboard using the ",(0,i.jsx)(t.code,{children:"Keyboard.dismiss()"})," method."]}),"\n",(0,i.jsxs)(t.p,{children:["You can find more APIs from the React Native documentation ",(0,i.jsx)(t.a,{href:"https://reactnative.dev/docs/accessibilityinfo",children:"https://reactnative.dev/docs/accessibilityinfo"})]})]})}function m(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>s,a:()=>r});var i=n(7294);const o={},a=i.createContext(o);function r(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);
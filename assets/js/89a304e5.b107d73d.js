"use strict";(self.webpackChunkmobilecourse=self.webpackChunkmobilecourse||[]).push([[2774],{5410:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var a=t(5893),n=t(1151);const r={title:"Async Storage",sidebar_position:1},o=void 0,i={id:"DataPersistence/asyncstorage",title:"Async Storage",description:"AsyncStorage is asynchronous and persistent key-value pair storage system. AsyncStorage is suitable for storing small data sets like user profiles, settings, or app state.",source:"@site/docs/DataPersistence/asyncstorage.md",sourceDirName:"DataPersistence",slug:"/DataPersistence/asyncstorage",permalink:"/mobilecourse/docs/DataPersistence/asyncstorage",draft:!1,unlisted:!1,editUrl:"https://github.com/haagahelia/mobileprogramming.git/docs/DataPersistence/asyncstorage.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Async Storage",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Data Persistence",permalink:"/mobilecourse/docs/category/data-persistence"},next:{title:"SQLite",permalink:"/mobilecourse/docs/DataPersistence/sqlite"}},c={},l=[{value:"Installation",id:"installation",level:3},{value:"Save data",id:"save-data",level:3},{value:"Read data",id:"read-data",level:3}];function d(e){const s={a:"a",admonition:"admonition",code:"code",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,n.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"AsyncStorage"})," is asynchronous and persistent key-value pair storage system. AsyncStorage is suitable for storing small data sets like user profiles, settings, or app state."]}),"\n",(0,a.jsx)(s.h3,{id:"installation",children:"Installation"}),"\n",(0,a.jsx)(s.p,{children:"You can install Async Storage using the follwing npm command:"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-bash",children:"npx expo install @react-native-async-storage/async-storage\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Import the ",(0,a.jsx)(s.code,{children:"AsyncStorage"}),":"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-js",children:"import { AsyncStorage } from '@react-native-async-storage/async-storage';\n"})}),"\n",(0,a.jsx)(s.h3,{id:"save-data",children:"Save data"}),"\n",(0,a.jsxs)(s.p,{children:["The ",(0,a.jsx)(s.code,{children:"setItem(key, value)"})," method can be used to save data. This method takes a key-value pair where the key is a string and the value is either a string or a serializable object converted to a string."]}),"\n",(0,a.jsx)(s.admonition,{type:"note",children:(0,a.jsxs)(s.p,{children:["Value must be string or it should be 'stringified' before saving using ",(0,a.jsx)(s.code,{children:"JSON.stringify()"}),". For reading you should then use ",(0,a.jsx)(s.code,{children:"JSON.parse()"}),"."]})}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-js",children:"handleSave = async () => {\n  try {\n    await AsyncStorage.setItem('someKey', 'This is the value');\n  } catch (error) {\n    Alert.alert('Error when saving data');\n  }\n} \n"})}),"\n",(0,a.jsx)(s.h3,{id:"read-data",children:"Read data"}),"\n",(0,a.jsxs)(s.p,{children:["The ",(0,a.jsx)(s.code,{children:"getItem(key)"})," method can be used to read data. That retrieves data from AsyncStorage using the defined key."]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-js",children:"handleRead = async () => {\n  try {\n    let value = await AsyncStorage.getItem('someKey');\n  } catch (error) {\n    Alert.alert('Error when reading data');\n  } \n}\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Expo provides also SecureStore that can be used to encrypt and securely store key\u2013value pairs locally on the device (",(0,a.jsx)(s.a,{href:"https://docs.expo.dev/versions/latest/sdk/securestore/",children:"https://docs.expo.dev/versions/latest/sdk/securestore/"}),")."]})]})}function h(e={}){const{wrapper:s}={...(0,n.a)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},1151:(e,s,t)=>{t.d(s,{Z:()=>i,a:()=>o});var a=t(7294);const n={},r=a.createContext(n);function o(e){const s=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),a.createElement(r.Provider,{value:s},e.children)}}}]);